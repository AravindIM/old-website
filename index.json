[{"content":"\u003ch1 id=\"installation-steps\"\u003eInstallation Steps\u003c/h1\u003e\n\u003ch2 id=\"connect-to-wifi\"\u003eConnect to Wifi\u003c/h2\u003e\n\u003cp\u003eSource: \u003ca href=\"https://wiki.archlinux.org/title/Iwd#iwctl\"\u003eiwctl\u003c/a\u003e\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eiwctl\n[iwd]# device list\n[iwd]# device deviceName set-property Powered on\n[iwd]# station deviceName scan\n[iwd]# station deviceName get-networks\n[iwd]# station deviceName connect SSID\nexit\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"check-internet\"\u003eCheck internet\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eping archlinux.org\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"check-system-time\"\u003eCheck system time\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003etimedatectl\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"partition-disks\"\u003ePartition disks\u003c/h2\u003e\n\u003ch3 id=\"check-disk\"\u003eCheck disk\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efdisk -l\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"create-partitions-disk\"\u003eCreate partitions disk\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eEnter fdisk\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003efdisk /dev/sdX\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eCreate GPT label\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eCommand (m for help): g\nCreated a new GPT disklabel (GUID: ...).\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eCreate boot partition\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eCommand (m for help): n\nPartition number: \nFirst sector: \nLast sector, +/-sectors or +/-size{K,M,G,T,P}: +512M\n\nCommand (m for help): t\nPartition type or alias (type L to list all): uefi\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eMake remaining partition for LUKS\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eCommand (m for help): n\nPartition number: \nFirst sector: \nLast sector, +/-sectors or +/-size{K,M,G,T,P}: \n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"4\"\u003e\n\u003cli\u003ePrint partition info to verify\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eCommand (m for help): p\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n5. Write changes (write changes and quit)\n  ```\nCommand (m for help): w\n\u003c/code\u003e\u003c/pre\u003e\u003col start=\"6\"\u003e\n\u003cli\u003eQuit fdisk (quit without writing changes in case of mistakes)\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eCommand (m for help): q\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Format Boot disk\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emkfs.fat -F 32 -n EFI /dev/sdXY\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Setup LUKS\n\n### Create LUKS partition\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ecryptsetup \u0026ndash;use-random luksFormat /dev/sdXZ\nAre you sure? YES\nEnter passphrase:\nVerify passphrase:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Open LUKS partition\n\nYou can use any other name instead of cryptroot but be sure to replace it everywhere in the following commands\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ecryptsetup open /dev/sdXZ cryptroot\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n#### Note\nOnce you created LVM, you only need to open the disk with cryptsetup\nNo additional command needed to access volume group (vg) all the existing LVM partitions are accessible right after unlocking the luks partition.\nThis might come in handy if you wish to had to reboot the system after LVM setup\n\n## Setup LVM\n\n### Create LVM group\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epvcreate /dev/mapper/cryptroot\nvgcreate vgroot /dev/mapper/cryptroot\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Create LVM Partitions\nThis assumes you don\u0026#39;t need separate home partition on LVM\n\nCreate swap\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003elvcreate \u0026ndash;size 8G vgroot \u0026ndash;name swap\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nCreate root\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003elvcreate -l +100%FREE vgroot \u0026ndash;name root\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Format LVM partitions\nFormat swap\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emkswap /dev/vgroot/swap -L swap\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eFormat root\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emkfs.btrfs /dev/vgroot/root -L root\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Create Btrfs Subvolumes\n\nMount btrfs partition to /mnt (install target root)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emount -t btrfs LABEL=root /mnt\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nCreate partitions one by one\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ebtrfs subvolume create /mnt/@\nbtrfs subvolume create /mnt/@home\nbtrfs subvolume create /mnt/@tmp\nbtrfs subvolume create /mnt/@varlog\nbtrfs subvolume create /mnt/@snapshots\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nDisable Copy-on-Write for tmp and varlog\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003echattr +C /mnt/@tmp\nchattr +C /mnt/@varlog\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nUnmount /mnt (install target root)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eumount -R /mnt\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Mount Btrfs Subvolumes\n\nThe followings options can be set for mounting\n- commit = time interval between data-writes in seconds\n- x-mount.mkdir = make directory if not existing when mounting\n- ssd = ssd based btrfs optimisations\n- noatime = do not store access time for files (makes btrfs faster)\n- nodiratime = do not store directory access time for files (makes btrfs faster)\n- discard = set as async, asynchronous queued TRIM for discard freed file blocks, check below\n\ncheck if discard is supported by checking if the output is greater than 0:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ecat /sys/block/sdX/queue/discard_max_bytes\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nMount btrfs subvolumes one by one:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emount -t btrfs -o defaults,x-mount.mkdir,compress=zstd,ssd,noatime,nodiratime,discard=async,space_cache=v2,commit=120,subvol=@ LABEL=root /mnt\nmount -t btrfs -o defaults,x-mount.mkdir,compress=zstd,ssd,noatime,nodiratime,discard=async,space_cache=v2,commit=120,subvol=@home LABEL=root /mnt/home\nmount -t btrfs -o defaults,x-mount.mkdir,compress=zstd,ssd,noatime,nodiratime,discard=async,space_cache=v2,commit=120,subvol=@tmp LABEL=root /mnt/tmp\nmount -t btrfs -o defaults,x-mount.mkdir,compress=zstd,ssd,noatime,nodiratime,discard=async,space_cache=v2,commit=120,subvol=@varlog LABEL=root /mnt/var/log\nmount -t btrfs -o defaults,x-mount.mkdir,compress=zstd,ssd,noatime,nodiratime,discard=async,space_cache=v2,commit=120,subvol=@snapshots LABEL=root /mnt/.snapshots\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Mount EFI dir\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emkdir -p /mnt/boot/efi\nmount LABEL=EFI /mnt/boot/efi\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Fix Mirrorlist: Reflector\n\nInstall reflector:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epacman -Syy reflector\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nConfigure mirrorlist using reflector:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ereflector \u0026ndash;verbose \u0026ndash;sort rate \u0026ndash;save /etc/pacman.d/mirrorlist\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Install Base Packages: Pacstrap\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epacstrap -K /mnt base linux linux-firmware vim nano\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Generate Mount Info Fstab\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003egenfstab -L -p /mnt \u0026raquo; /mnt/etc/fstab\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Chroot into Installed Environment\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003earch-chroot /mnt\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Set Timezone\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eln -sf /usr/share/zoneinfo/Region/City /etc/localtime\nhwclock \u0026ndash;systohc\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Set Locale\n\nEdit /etc/locale.gen and uncomment the required locales then run:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003elocale-gen\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nCreate /etc/locale.conf with content:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLANG=en_US.UTF-8\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Configure Hostname\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eecho yourhostname \u0026raquo; /etc/hostname\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Install additional packages\n\nInstall required programs like shell, development packages, sudo, btfs, secure boot, ucode, bluetooth, wifi, desktop environment, etc\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epacman -Syu base-devel btrfs-progs gptfdisk zsh sudo ttf-dejavu noto-fonts noto-fonts-cjk intel-ucode polkit wpa_supplicant mesa lvm2 efibootmgr bash-completion git man pipewire wireplumber pipewire-alsa pipewire-pulse gnome\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nIf installing gnome select pipewire-jack, wireplumber, noto-fonts-emoji in the proceeding interactive questions\n\n## Unified Kernel Image Setup\n\nThis step is useful for encrypted boot device. You can skip this step if you\u0026#39;re using grub as grub comes with decrypting disk before the boot menu is shown. Most other bootloaders do not work with this setup.\n\n### Configure mkinitcpio Hooks\n\nEdit /etc/mkinitcpio.conf and add systemd after base; sd-encrypt and lvm2 before filesystems:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHOOKS=(base systemd plymouth modconf keyboard keymap block lvm2 btrfs filesystems sd-encrypt fsck)\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Kernel Parameters\n\nCreate /etc/kernel/cmdline with contents:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003efbcon=nodefer rw rd.luks.allow-discards quiet root=LABEL=root rootflags=subvol=@ rw splash vt.global_cursor_default=0\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Crypttab setup\n\nCreate file /etc/crypttab.initramfs with contents:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eroot /dev/mapper/cryptroot none timeout=180,tpm2-device=auto\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Secure boot setup\n\nInstall Secure Boot:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo pacman -Syyu sbctl\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nCreate Secure boot keys:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esbctl create-keys\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Enroll keys\n\nChange attributes of keys in btrfs:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo chattr -i /sys/firmware/efi/efivars/{PK,KEK,db}*\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eIn the above command, if either of PK,KEK or db causes command to fail remove that from the list and run with the rest.\n\nNow, Enroll keys along with Microsoft keys (-m):\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esbctl enroll-keys -m\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nGenerate signed unified image:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esbctl bundle -s /boot/efi/EFI/Linux/arch-linux.efi\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Bootloader: SystemD Boot\n\n### Sign bootloader for Secureboot\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esbctl sign -s -o /usr/lib/systemd/boot/efi/systemd-bootx64.efi.signed /usr/lib/systemd/boot/efi/systemd-bootx64.efi\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Install\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ebootctl install\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## User Management\nCreate root password\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epasswd\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\ncreate user USERNAME:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003euseradd -m -G wheel,storage,power -g users -s /bin/bash USERNAME\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\ncreate password for user USERNAME:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003epasswd USERNAME\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nDon\u0026#39;t forget to uncomment wheel line with visudo:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003evisudo\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nSearch for the following line and remove the # infront of it:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e%wheel ALL=(ALL:ALL) ALL\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nSwitch user to USERNAME\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo -u USERNAME -i\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Enable services\nEnable Gnome Display Manager\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo systemctl enable gdm\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nEnable Network Manager\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo systemctl enable NetworkManager\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nEnable Network Manager\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo systemctl enable bluetooth\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Install Aur helper\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo pacman -Syy go\ngit clone \u003ca href=\"https://aur.archlinux.org/yay.git\"\u003ehttps://aur.archlinux.org/yay.git\u003c/a\u003e\ncd yay\nmakepkg -is\ncd ..\nrm -rf yay\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Plymouth Setup\n\n### Install plymouth\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eyay -Syy plymouth-git\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Install plymouth theme\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eyay -Syy plymouth-theme-bgrt-better-luks\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Set Plymouth theme\nShow installed plymouth themes:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo plymouth-set-default-theme -l\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nSet plymouth theme:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo plymouth-set-default-theme -R bgrt-better-luks\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nthen logout current user to get back to root:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eexit\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n### Rerun mkinitcpio\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo mkinitcpio -p linux\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Regenerate Unified Kernel Image\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003esudo sbctl generate-bundles -s\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\n## Finish Install\nlogout of user USERNAME, exit arch-chroot, unmount and reboot:\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eexit\nexit\numount -a\nreboot\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003e\nTurn on secure boot in BIOS after this. Nothing else needed for Secure Boot.\n\n## Reference\n\n1. https://wiki.archlinux.org/title/User:ZachHilman/Installation_-_Btrfs_%2B_LUKS2_%2B_Secure_Boot\n\n2. https://wiki.archlinux.org/title/Installation_guide\n\n3. https://gist.github.com/mjnaderi/28264ce68f87f52f2cabb823a503e673\n\n4. https://gist.github.com/martijnvermaat/76f2e24d0239470dd71050358b4d5134\n\n5. https://nerdstuff.org/posts/2020/2020-004_arch_linux_luks_btrfs_systemd-boot/\n\n6. https://github.com/Szwendacz99/Arch-install-encrypted-btrfs\n\n7. https://www.reddit.com/r/archlinux/comments/127fp6g/plymouthencrypt_hook_no_longer_found_after_update/\n\n8. https://bbs.archlinux.org/viewtopic.php?id=284741\n\n9. https://www.youtube.com/watch?v=QQoZwP6-Y2k\n\n10. https://github.com/AravindIM/nixos-dotfiles/blob/main/hosts/thinkpad/hardware-configuration.nix\n\n11. https://github.com/AravindIM/arch-install/blob/main/install-gnome.sh\n\n12. https://github.com/0xadeeb/dotFiles\n\n13. https://github.com/0xadeeb/NixOs-config/blob/master/hosts/hp-pavilion/hardware-configuration.nix\n\n14. https://bbs.archlinux.org/viewtopic.php?id=243019\n\n15. https://wiki.archlinux.org/title/Talk:Mkinitcpio#Improvements_for_the_Common_hooks_table_and_section_about_systemd_hook\n\n16. https://wiki.archlinux.org/title/Power_management/Suspend_and_hibernate\n\n17. https://askubuntu.com/questions/1304519/fstab-automatically-creates-mount-points\n\n18. https://wiki.archlinux.org/title/User:Bai-Chiang/Installation_notes\n\n19. https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot\n\n20. https://wiki.archlinux.org/title/Unified_kernel_image\n\n21. https://wiki.archlinux.org/title/AUR_helpers\n\n22. https://linuxhint.com/btrfs-filesystem-mount-options/\n\n23. https://linuxconfig.org/how-to-manage-efi-boot-manager-entries-on-linux\n\n24. https://wiki.archlinux.org/title/dm-crypt/Encrypting_an_entire_system#Encrypted_boot_partition_(GRUB)\n\n25. https://git.launchpad.net/~ubuntu-core-dev/grub/+git/ubuntu/tree/debian/build-efi-images?h=debian/2.06-2ubuntu12\n\u003c/code\u003e\u003c/pre\u003e","description":"","image":"/images/post.jpg","permalink":"https://aravindim.github.io/blogs/how-to-install-arch-linux-uefi-luks-lvm-btrfs-systemdboot-uki-secure-boot/","title":"How to install Arch Linux with UEFI + LUKS + LVM +  BTRFS + Unified Kernel Image + System D Boot + Secure Boot"},{"content":"\u003ch2 id=\"setup-the-config-file\"\u003eSetup the config file\u003c/h2\u003e\n\u003cp\u003eTo make dnf (Dandified Yum) faster in Fedora, you can edit the \u003cmark\u003e[main]\u003c/mark\u003e section in the file \u003cmark\u003e/etc/dnf/dnf.conf\u003c/mark\u003e try the following optimization tips:\u003c/p\u003e\n\u003ch3 id=\"enable-fastest-mirrors\"\u003eEnable Fastest Mirrors\u003c/h3\u003e\n\u003cp\u003eEnable fastest mirrors so that dnf will check all mirrors for the fastest one:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e[main]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003efastestmirror\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"enable-deltarpm\"\u003eEnable DeltaRPM\u003c/h3\u003e\n\u003cp\u003eDelta RPM (DRPM) lets you install packages using binary difference between old and new packages.\u003c/p\u003e\n\u003cp\u003eFirst install Delta RPM if it is not already installed:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo dnf install deltarpm\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eNow enable that in the \u003cabbr title=\"/etc/dnf/dnf.conf\"\u003ednf config file\u003c/abbr\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e[main]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003edeltarpm\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003eTrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"optimise-package-download\"\u003eOptimise Package Download\u003c/h3\u003e\n\u003cp\u003eSet the maximum number of parrallel downloads of packages in the \u003cabbr title=\"/etc/dnf/dnf.conf\"\u003ednf config file\u003c/abbr\u003e according to your internet connection speed.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e[main]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003emax_parallel_downloads\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e10\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"optimise-metadata-refresh-interval\"\u003eOptimise MetaData Refresh Interval\u003c/h3\u003e\n\u003cp\u003eUnlike package managers like apt, dnf periodically refreshes its metadata, which includes packages lists, their dependencies and other information. You can avoid excessive metadata refreshes by increasing the interval of metadata refresh to about 2 hours or more (7200 seconds) in the \u003cabbr title=\"/etc/dnf/dnf.conf\"\u003ednf config file\u003c/abbr\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-ini\" data-lang=\"ini\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003e[main]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003emetadata_timer_sync\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e7200\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"rebuild-dnf-cache\"\u003eRebuild DNF Cache\u003c/h2\u003e\n\u003cp\u003eYou can rebuild the DNF Cache and rebuilt it after configuring the \u003cabbr title=\"/etc/dnf/dnf.conf\"\u003ednf config file\u003c/abbr\u003e as mentioned above\u003c/p\u003e\n\u003cp\u003eFirst clean the DNF Cache:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo dnf clean all\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen predownload the package headers:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003esudo dnf makecache\n\u003c/code\u003e\u003c/pre\u003e","description":"","image":"/images/post.jpg","permalink":"https://aravindim.github.io/blogs/howt-to-make-dnf-faster/","title":"How to make dnf faster in Fedora"},{"content":"\u003ch2 id=\"install-node-from-guix-repo\"\u003eInstall node from guix repo\u003c/h2\u003e\n\u003cp\u003eEither install it into user\u0026rsquo;s guix profile using the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eguix pull\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eguix install node\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eOr install it system-wide by adding the line (specification-\u0026gt;package \u0026ldquo;node\u0026rdquo;) to your system\u0026rsquo;s config file \u003cmark\u003e/etc/config.scm\u003c/mark\u003e as shown below:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-guile\" data-lang=\"guile\"\u003e(operating-system\n  ...\n  (packages\n    (append\n      (list\n        ...\n        (specification-\u0026gt;package \u0026#34;node\u0026#34;)\n        ...)\n      %base-packages))\n...)\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eReconfigure the system if installing node system-wide:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eguix pull\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo guix system reconfigure /etc/config.scm\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup-custom-install-folder-for-npm-packages\"\u003eSetup custom install folder for npm packages\u003c/h2\u003e\n\u003cp\u003eCreate a folder \u003cmark\u003e.vnode\u003c/mark\u003e for npm global installation of packages in home instead of root and enable it:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emkdir $HOME/.vnode\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm config set prefix \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$HOME\u003cspan style=\"color:#e6db74\"\u003e/.vnode\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdd the \u003cmark\u003ebin\u003c/mark\u003e folder inside \u003cmark\u003e.vnode\u003c/mark\u003e directory to \u003cmark\u003e~/.bashrc\u003c/mark\u003e or \u003cmark\u003e~/.zshrc\u003c/mark\u003e and then source the file. It\u0026rsquo;s recommended that you logout and log back in. Otherwise, you\u0026rsquo;ll need to source the directory everytime you need to use the npm.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eecho \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;export PATH=\u003c/span\u003e$HOME\u003cspan style=\"color:#e6db74\"\u003e/.vnode/bin:\u003c/span\u003e$PATH\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u0026gt;\u0026gt; ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esource ~/.bashrc\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eInstall npm globally and it will install into that directory.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enpm install -g npm\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setup-preinstall-script\"\u003eSetup preinstall script\u003c/h2\u003e\n\u003cp\u003eNow add the following preinstall script into \u003cmark\u003e$HOME/.vnode/lib/node_modules/.hooks/preinstall\u003c/mark\u003e using a text editor.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#/usr/bin/env bash\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epkg_path\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$PWD\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e patch_shebang\u003cspan style=\"color:#f92672\"\u003e()\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e file\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e$1\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e python_bin\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003etype -p python\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e ruby_bin\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003etype -p ruby\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e env_bin\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003etype -p env\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e bash_bin\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003etype -p bash\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$env_bin\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   sed -i -uE \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;s|^#!.+/env|#!\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eenv_bin\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e|\u0026#34;\u003c/span\u003e $file\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#66d9ef\"\u003eelif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$bash_bin\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e   sed -i -uE \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;s|^#!.+/bash|#!\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003ebash_bin\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e|\u0026#34;\u003c/span\u003e $file\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#66d9ef\"\u003eelif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$python_bin\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     sed -i -uE \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;s|^#!.+/bash|#!\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003epython_bin\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e|\u0026#34;\u003c/span\u003e $file\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#66d9ef\"\u003eelif\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003e -n \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e$ruby_bin\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e; \u003cspan style=\"color:#66d9ef\"\u003ethen\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e     sed -i -uE \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;s|^#!.+/bash|#!\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003eruby_bin\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e|\u0026#34;\u003c/span\u003e $file\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \u003cspan style=\"color:#66d9ef\"\u003efi\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003efiles\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003efind $pkg_path -type f -exec grep -lE \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;^#!(.+ )\u0026#39;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e{}\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e\\;\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e file in $files; \u003cspan style=\"color:#66d9ef\"\u003edo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e patch_shebang $file\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003edone\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAllow execution of the script.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003echmod a+rx $HOME/.vnode/node_modules/.hooks/preinstall\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIf everything went well, you will now be able to run \u003cmark\u003enpm install -g package-name\u003c/mark\u003e and install global packages into the newly created directory \u003cmark\u003e.vnode\u003c/mark\u003e. For local packages just copy the preinstall script into \u003cmark\u003emyprojectdir/node_modules/.hooks/preinstall\u003c/mark\u003e.\u003c/p\u003e\n","description":"","image":"/images/post.jpg","permalink":"https://aravindim.github.io/blogs/how-to-setup-nodejs-in-guix/","title":"Setting Up NodeJS in Guix"}]